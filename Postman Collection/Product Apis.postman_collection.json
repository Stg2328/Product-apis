{
	"info": {
		"_postman_id": "1b9f265c-3272-427f-848c-46162b163b1a",
		"name": "Product Apis",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Scripts\" tab**\n\nAdding tests to your requests can help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/fa30ea0a-373d-4545-a668-e7b283cca343/aW1hZ2UucG5n\" alt=\"\" height=\"1530\" width=\"2162\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n    \n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36291274",
		"_collection_link": "https://www.postman.com/grey-firefly-761162/workspace/product/collection/36291274-1b9f265c-3272-427f-848c-46162b163b1a?action=share&source=collection_link&creator=36291274"
	},
	"item": [
		{
			"name": "Get Products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/products",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"products"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": [
				{
					"name": "Success Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:2328/api/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "2328",
							"path": [
								"api",
								"products"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "797"
						},
						{
							"key": "ETag",
							"value": "W/\"31d-jYS6uskFgMcNfOxKxas2/6MEMcQ\""
						},
						{
							"key": "Date",
							"value": "Wed, 02 Oct 2024 07:51:08 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"_id\": \"66fcf5dc5f8a2066bcbcb593\",\n        \"name\": \"Updated Product\",\n        \"price\": 59.99,\n        \"description\": \"An updated product description.\",\n        \"category\": \"Updated Gadgets\",\n        \"stock\": 20,\n        \"imageUrl\": \"http://example.com/updatedproduct.jpg\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"66fcf648b429a036e4ad4c61\",\n        \"name\": \"New Product\",\n        \"price\": 49.99,\n        \"description\": \"A brand new product.\",\n        \"category\": \"Gadgets\",\n        \"stock\": 15,\n        \"imageUrl\": \"http://example.com/newproduct.jpg\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"66fcf88eb429a036e4ad4c64\",\n        \"name\": \"New Product\",\n        \"price\": 49.99,\n        \"description\": \"A brand new product.\",\n        \"category\": \"Gadgets\",\n        \"stock\": 15,\n        \"imageUrl\": \"http://example.com/newproduct.jpg\",\n        \"__v\": 0\n    },\n    {\n        \"_id\": \"66fcf928b429a036e4ad4c66\",\n        \"name\": \"New Product\",\n        \"price\": 49.99,\n        \"description\": \"A brand new product.\",\n        \"category\": \"\",\n        \"stock\": 15,\n        \"imageUrl\": \"http://example.com/newproduct.jpg\",\n        \"__v\": 0\n    }\n]"
				}
			]
		},
		{
			"name": "Get Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/products/66fcf648b429a036e4ad4c61",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"products",
						"66fcf648b429a036e4ad4c61"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": [
				{
					"name": "Success Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:2328/api/products/66fcf5dc5f8a2066bcbcb596",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "2328",
							"path": [
								"api",
								"products",
								"66fcf5dc5f8a2066bcbcb596"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "220"
						},
						{
							"key": "ETag",
							"value": "W/\"dc-Odwlcrnf2bmuYNLNmX/+CJBlZ5o\""
						},
						{
							"key": "Date",
							"value": "Wed, 02 Oct 2024 07:51:55 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"_id\": \"66fcf5dc5f8a2066bcbcb593\",\n    \"name\": \"Updated Product\",\n    \"price\": 59.99,\n    \"description\": \"An updated product description.\",\n    \"category\": \"Updated Gadgets\",\n    \"stock\": 20,\n    \"imageUrl\": \"http://example.com/updatedproduct.jpg\",\n    \"__v\": 0\n}"
				},
				{
					"name": "Not Found Product",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/products/66fcf5dc5f8a2066bcbcb596",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"products",
								"66fcf5dc5f8a2066bcbcb596"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "31"
						},
						{
							"key": "ETag",
							"value": "W/\"1f-Zkgaox/LmBaRs1Ofkuc8bu8COvo\""
						},
						{
							"key": "Date",
							"value": "Wed, 02 Oct 2024 07:52:23 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Product not found\"\n}"
				}
			]
		},
		{
			"name": "Add Prouduct",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"New Product 4\",\n  \"price\": 49.99,\n  \"description\": \"A brand new product.\",\n  \"category\": \"Gadgets\",\n  \"stock\": 55,\n  \"imageUrl\": \"http://stg.com/newproduct.jpg\"\n}\n\n/*\nField Descriptions:\n- name: (string) The name of the product\n- price: (number) The price of the product in USD\n- description: (string) A brief description of the product\n- category: (string) The category under which the product is classified\n- stock: (number) The number of items available in stock\n- imageUrl: (string) A URL link to an image of the product\n*/\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/products",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"products"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": [
				{
					"name": "Required Field Validation",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"New Product\",\n  \"price\": \"STG\",\n  \"description\": \"A brand new product.\",\n  \"category\": \"Gadgets\",\n  \"stock\": 15,\n  \"imageUrl\": \"http://example.com/newproduct.jpg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:2328/api/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "2328",
							"path": [
								"api",
								"products"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "54"
						},
						{
							"key": "ETag",
							"value": "W/\"36-l1OczuHXcSSWdqYagsOHV+G9ENU\""
						},
						{
							"key": "Date",
							"value": "Wed, 02 Oct 2024 07:29:46 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"errors\": [\n        \"Price is required and must be a number.\"\n    ]\n}"
				},
				{
					"name": "Success Response",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"New Product\",\n  \"price\": 49.99,\n  \"description\": \"A brand new product.\",\n  \"category\": \"Gadgets\",\n  \"stock\": 15,\n  \"imageUrl\": \"http://example.com/newproduct.jpg\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/products",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"products"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "193"
						},
						{
							"key": "ETag",
							"value": "W/\"c1-mnZjwzKB3WDjklnxSzCcslH1cXA\""
						},
						{
							"key": "Date",
							"value": "Wed, 02 Oct 2024 07:38:54 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"name\": \"New Product\",\n    \"price\": 49.99,\n    \"description\": \"A brand new product.\",\n    \"category\": \"Gadgets\",\n    \"stock\": 15,\n    \"imageUrl\": \"http://example.com/newproduct.jpg\",\n    \"_id\": \"66fcf88eb429a036e4ad4c64\",\n    \"__v\": 0\n}"
				},
				{
					"name": "Type  Validation",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"New Product\",\n  \"price\": 49.99,\n  \"description\": \"A brand new product.\",\n  \"category\": \"\",\n  \"stock\": \"\",\n  \"imageUrl\": \"http://example.com/newproduct.jpg\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/products",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"products"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "38"
						},
						{
							"key": "ETag",
							"value": "W/\"26-Yu+aar81Ky96eOFrt9S4jiNw9Pk\""
						},
						{
							"key": "Date",
							"value": "Wed, 02 Oct 2024 07:41:41 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"errors\": [\n        \"Stock must be a number.\"\n    ]\n}"
				}
			]
		},
		{
			"name": "Update Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Updated Product\",\n  \"price\": \"STG\",\n  \"description\": \"An updated product description.\",\n  \"category\": \"Updated Gadgets\",\n  \"stock\": 20,\n  \"imageUrl\": \"http://example.com/updatedproduct.jpg\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/products/66fcf5dc5f8a2066bcbcb598",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"products",
						"66fcf5dc5f8a2066bcbcb598"
					]
				},
				"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
			},
			"response": [
				{
					"name": "Success Response",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Product\",\n  \"price\": 59.99,\n  \"description\": \"An updated product description.\",\n  \"category\": \"Updated Gadgets\",\n  \"stock\": 20,\n  \"imageUrl\": \"http://example.com/updatedproduct.jpg\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:2328/api/products/66fcf5dc5f8a2066bcbcb593",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "2328",
							"path": [
								"api",
								"products",
								"66fcf5dc5f8a2066bcbcb593"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "220"
						},
						{
							"key": "ETag",
							"value": "W/\"dc-Odwlcrnf2bmuYNLNmX/+CJBlZ5o\""
						},
						{
							"key": "Date",
							"value": "Wed, 02 Oct 2024 07:47:42 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"_id\": \"66fcf5dc5f8a2066bcbcb593\",\n    \"name\": \"Updated Product\",\n    \"price\": 59.99,\n    \"description\": \"An updated product description.\",\n    \"category\": \"Updated Gadgets\",\n    \"stock\": 20,\n    \"imageUrl\": \"http://example.com/updatedproduct.jpg\",\n    \"__v\": 0\n}"
				},
				{
					"name": "Not Found Product",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Product\",\n  \"price\": 59.99,\n  \"description\": \"An updated product description.\",\n  \"category\": \"Updated Gadgets\",\n  \"stock\": 20,\n  \"imageUrl\": \"http://example.com/updatedproduct.jpg\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/products/66fcf5dc5f8a2066bcbcb598",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"products",
								"66fcf5dc5f8a2066bcbcb598"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "31"
						},
						{
							"key": "ETag",
							"value": "W/\"1f-Zkgaox/LmBaRs1Ofkuc8bu8COvo\""
						},
						{
							"key": "Date",
							"value": "Wed, 02 Oct 2024 07:48:55 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Product not found\"\n}"
				},
				{
					"name": "Required Validation",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Product\",\n  \"description\": \"An updated product description.\",\n  \"category\": \"Updated Gadgets\",\n  \"stock\": 20,\n  \"imageUrl\": \"http://example.com/updatedproduct.jpg\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/products/66fcf5dc5f8a2066bcbcb598",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"products",
								"66fcf5dc5f8a2066bcbcb598"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "54"
						},
						{
							"key": "ETag",
							"value": "W/\"36-l1OczuHXcSSWdqYagsOHV+G9ENU\""
						},
						{
							"key": "Date",
							"value": "Wed, 02 Oct 2024 07:49:55 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"errors\": [\n        \"Price is required and must be a number.\"\n    ]\n}"
				},
				{
					"name": "Type Validation",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Product\",\n  \"price\": \"STG\",\n  \"description\": \"An updated product description.\",\n  \"category\": \"Updated Gadgets\",\n  \"stock\": 20,\n  \"imageUrl\": \"http://example.com/updatedproduct.jpg\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/products/66fcf5dc5f8a2066bcbcb598",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"products",
								"66fcf5dc5f8a2066bcbcb598"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "54"
						},
						{
							"key": "ETag",
							"value": "W/\"36-l1OczuHXcSSWdqYagsOHV+G9ENU\""
						},
						{
							"key": "Date",
							"value": "Wed, 02 Oct 2024 07:50:31 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"errors\": [\n        \"Price is required and must be a number.\"\n    ]\n}"
				},
				{
					"name": "No Changes Detected",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Product\",\n  \"price\": 2328,\n  \"description\": \"An updated product description.\",\n  \"category\": \"Updated Gadgets\",\n  \"stock\": 20,\n  \"imageUrl\": \"http://example.com/updatedproduct.jpg\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/products/66fcf648b429a036e4ad4c61",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"products",
								"66fcf648b429a036e4ad4c61"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "34"
						},
						{
							"key": "ETag",
							"value": "W/\"22-f59aShLv5+tVwTMTuB088r9KovE\""
						},
						{
							"key": "Date",
							"value": "Wed, 02 Oct 2024 08:52:54 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"No changes detected.\"\n}"
				}
			]
		},
		{
			"name": "Delete Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/products/66fcf5dc5f8a2066bcbcb593",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"products",
						"66fcf5dc5f8a2066bcbcb593"
					]
				},
				"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
			},
			"response": [
				{
					"name": "Success Response",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:2328/api/products/66fcf5dc5f8a2066bcbcb593",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "2328",
							"path": [
								"api",
								"products",
								"66fcf5dc5f8a2066bcbcb593"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "29"
						},
						{
							"key": "ETag",
							"value": "W/\"1d-SUOjrQM9v/ZnWfd464qBypgAgyE\""
						},
						{
							"key": "Date",
							"value": "Wed, 02 Oct 2024 07:52:52 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Product deleted\"\n}"
				},
				{
					"name": "Not Found Product",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/products/66fcf5dc5f8a2066bcbcb593",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"products",
								"66fcf5dc5f8a2066bcbcb593"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "32"
						},
						{
							"key": "ETag",
							"value": "W/\"20-6BZ7y6LC2xqZVsWUbG/vUj+xtc8\""
						},
						{
							"key": "Date",
							"value": "Wed, 02 Oct 2024 08:51:11 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"product not found.\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}